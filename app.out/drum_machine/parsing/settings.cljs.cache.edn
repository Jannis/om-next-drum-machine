;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name drum-machine.parsing.settings, :imports nil, :requires {drum-machine.reconciler drum-machine.reconciler}, :uses {mutate drum-machine.reconciler, read drum-machine.reconciler}, :defs {get-bpm {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-drum-machine/g3u/7o2s6s/drum_machine/parsing/settings.cljs", :line 4, :column 7, :end-line 4, :end-column 14, :arglists (quote ([st key]))}, :name drum-machine.parsing.settings/get-bpm, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-drum-machine/g3u/7o2s6s/drum_machine/parsing/settings.cljs", :end-column 14, :method-params ([st key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 2, :fn-var true, :arglists (quote ([st key]))}, get-bars {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-drum-machine/g3u/7o2s6s/drum_machine/parsing/settings.cljs", :line 17, :column 7, :end-line 17, :end-column 15, :arglists (quote ([st key]))}, :name drum-machine.parsing.settings/get-bars, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-drum-machine/g3u/7o2s6s/drum_machine/parsing/settings.cljs", :end-column 15, :method-params ([st key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([st key]))}, get-beat {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-drum-machine/g3u/7o2s6s/drum_machine/parsing/settings.cljs", :line 30, :column 7, :end-line 30, :end-column 15, :arglists (quote ([st key]))}, :name drum-machine.parsing.settings/get-beat, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-drum-machine/g3u/7o2s6s/drum_machine/parsing/settings.cljs", :end-column 15, :method-params ([st key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists (quote ([st key]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:settings/bars :settings/beat :settings/bpm settings/set-bars :value :state settings/next-beat settings/set-bpm :action}, :order [:settings/bpm :state :value settings/set-bpm :action :settings/bars settings/set-bars :settings/beat settings/next-beat]}, :doc nil}