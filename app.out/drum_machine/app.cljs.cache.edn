;; Analyzed by ClojureScript 1.7.145
{:use-macros {go cljs.core.async.macros, defui om.next}, :excludes #{}, :name drum-machine.app, :imports nil, :requires {dom om.dom, om.dom om.dom, cljs.core.async cljs.core.async, drum-machine.parsing.tracks drum-machine.parsing.tracks, settings drum-machine.parsing.settings, tracks drum-machine.parsing.tracks, drum-machine.reconciler drum-machine.reconciler, drum-machine.components.track drum-machine.components.track, om om.next, om.next om.next, drum-machine.parsing.settings drum-machine.parsing.settings}, :uses {timeout cljs.core.async, <! cljs.core.async, track drum-machine.components.track, reconciler drum-machine.reconciler, Track drum-machine.components.track, parse drum-machine.reconciler}, :defs {App {:protocol-inline nil, :meta {:jsdoc ["@constructor"], :arglists (quote ([])), :file nil}, :name drum-machine.app/App, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-drum-machine/jpu/7o2s6s/drum_machine/app.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :jsdoc ["@constructor"]}, run {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-drum-machine/jpu/7o2s6s/drum_machine/app.cljs", :line 60, :column 7, :end-line 60, :end-column 10, :arglists (quote ([]))}, :name drum-machine.app/run, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-next-drum-machine/jpu/7o2s6s/drum_machine/app.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.next, om.next om.next, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:beat :settings/bars :settings/beat :settings/bpm :om.next/queries :else :bars settings/set-bars :ref :config :value :tracks :recur :state settings/next-beat :update-fn :indexer settings/set-bpm tracks/update :props}, :order [:config :state :indexer :om.next/queries settings/set-bpm :value settings/set-bars tracks/update :ref :props :settings/bpm :settings/bars :settings/beat :bars :beat :update-fn :tracks :recur settings/next-beat :else]}, :doc nil}